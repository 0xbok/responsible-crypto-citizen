{"version":3,"sources":["component/aave/Proposal.js","component/aave/App.js","component/compound/Proposal.js","component/compound/App.js","component/uniswap/Proposal.js","component/uniswap/App.js","index.js"],"names":["Proposal","nest","id","match","params","getProposalQuery","gql","GetProposal","console","log","useQuery","variables","loading","error","data","proposal","state","title","shortDescription","AaveApp","allProposalsQuery","Proposals","proposals","map","element","index","to","target","exact","path","component","status","children","description","CompoundApp","substring","provider","ethers","providers","Web3Provider","window","ethereum","useState","curBlockNumber","setCurBlockNumber","getBlockNumber","then","blockNumber","isVotingAllowed","endBlock","UniswapApp","aaveClient","ApolloClient","uri","cache","InMemoryCache","compoundClient","uniswapClient","ReactDOM","render","ApolloProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.61f8b836.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nfunction Proposal(nest) {\n    var id = nest.match.params.id;\n  const getProposalQuery = gql`\n    query getProposal($id: ID) {\n      proposal(id: $id) {\n        id\n        state\n        title\n        shortDescription\n      }\n    }`;\n\n  \n\n  function GetProposal() {\n    console.log(nest);\n    \n    console.log(id);\n    const { loading, error, data } = useQuery(getProposalQuery, { variables: {id}} );\n    if (loading) return <p>Loading...</p>;\n    if (error) {\n        console.log(error);\n        return <p>Error :(</p>;\n    }\n\n    console.log(data);\n    \n    return <div>\n      <b>ID: {data.proposal.id}, State: {data.proposal.state}</b><br/>\n      <b>{data.proposal.title}</b><br/>\n      <i>{data.proposal.shortDescription}</i><br/>\n      </div>\n  }\n\n\n  return (\n    <div>\n      <h2>Aave Governance Proposal {id} </h2>\n      <GetProposal />\n    </div>\n  );\n}\n\nexport default Proposal;","import React from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";  \nimport Proposal from './Proposal';\n\n\nfunction AaveApp() {\n  const allProposalsQuery = gql`\n    query getAllProposals {\n      proposals(first: 10) {\n        id\n        state\n        title\n        shortDescription\n      }\n    }`;\n\n  function Proposals() {\n    const { loading, error, data } = useQuery(allProposalsQuery);\n    if (loading) return <p>Loading...</p>;\n    if (error) {\n      console.log(error);\n      return <p>Error :(</p>;\n    }\n    \n    return <ul> {\n      data.proposals.map(\n        function(element, index){ \n          return <li key={element.id}> <Link to={'/aave/'+element.id} target=\"_blank\"> {element.id}, {element.state}, {element.title}, {element.shortDescription} </Link> </li>; \n        })} \n      </ul>\n      \n    \n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>  \n        <Route exact path=\"/\">\n          <div>\n            <h2>Aave Governance Proposals</h2>\n            <Proposals />\n          </div>\n        </Route>\n          <Route path=\"/aave/:id\" component={Proposal} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default AaveApp;","import React from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction Proposal(nest) {\n    var id = nest.match.params.id;\n  const getProposalQuery = gql`\n    query getProposal($id: ID) {\n      proposal(id: $id) {\n        id\n        status\n        description\n      }\n    }`;\n\n  \n\n  function GetProposal() {\n    console.log(nest);\n    \n    console.log(id);\n    const { loading, error, data } = useQuery(getProposalQuery, { variables: {id}} );\n    if (loading) return <p>Loading...</p>;\n    if (error) {\n        console.log(error);\n        return <p>Error :(</p>;\n    }\n\n    console.log(data);\n    \n    return <div>\n    <b>ID: {data.proposal.id}, State: {data.proposal.status}</b><br/>\n    <ReactMarkdown children={data.proposal.description} /><br/>\n    </div>\n  }\n\n\n  return (\n    <div>\n      <h2>Compound Governance Proposal {id} </h2>\n      <GetProposal />\n    </div>\n  );\n}\n\nexport default Proposal;","import {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";  \nimport Proposal from './Proposal';\n\nfunction CompoundApp() {\n  const allProposalsQuery = gql`\n    query getAllProposals {\n      proposals(where: {status: ACTIVE}) {\n        id\n        status\n        description \n      }   \n    }`;\n\nfunction Proposals() {\n  const { loading, error, data } = useQuery(allProposalsQuery);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  \n  return <ul> {\n    data.proposals.map(\n      function(element, index){ \n        return <li key={element.id}> <Link to={'/compound/'+element.id} target=\"_blank\"> {element.id}, {element.status}, {element.description.substring(1,20)}... </Link> </li>; \n      })} \n    </ul>;\n}\n\nreturn (\n  <BrowserRouter>\n  <Switch>  \n    <Route exact path=\"/\">\n  <div>\n    <h2>Compound Governance Proposals</h2>\n    <Proposals />\n  </div>\n  </Route>\n      <Route path=\"/compound/:id\" component={Proposal} />\n    </Switch>\n    </BrowserRouter>\n);\n}\n\nexport default CompoundApp;","import React, {Suspense, useState} from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport ReactMarkdown from \"react-markdown\";\nimport { ethers } from \"ethers\";\n\n\nfunction Proposal(nest) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const [curBlockNumber, setCurBlockNumber] = useState();\n  \n  provider.getBlockNumber().then(function(blockNumber) {\n    console.log(\"Current block number: \" + blockNumber);\n    setCurBlockNumber(blockNumber);\n  });\n\n  var id = nest.match.params.id;\n  const getProposalQuery = gql`\n    query getProposal($id: ID) {\n      proposal(id: $id) {\n        id\n        status\n        endBlock\n        description\n      }\n    }`;\n\n\n\n  function GetProposal() {\n    console.log(nest);\n    console.log(id);\n    const { loading, error, data } = useQuery(getProposalQuery, { variables: {id}} );\n    if (loading) return <p>Loading...</p>;\n    if (error) {\n        console.log(error);\n        return <p>Error :(</p>;\n    }\n\n    console.log(data);\n    \n    let isVotingAllowed;\n    if(curBlockNumber > data.proposal.endBlock) {\n      isVotingAllowed = <div> Voting deadline passed. </div>\n    } else {\n      isVotingAllowed = <div> Vote </div>\n    }\n    return <div>\n        <b>ID: {data.proposal.id}, State: {data.proposal.status}</b><br/>\n        Voting ends on block: {data.proposal.endBlock}. \n        Current Block: {curBlockNumber}.\n        {isVotingAllowed}\n        <ReactMarkdown children={data.proposal.description} /><br/>\n      </div>\n  }\n\n\n  return (\n    <div>\n      <h2>Uniswap Governance Proposal {id} </h2>\n      <GetProposal />\n    </div>\n  );\n}\n\nexport default Proposal;","import React from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";  \nimport Proposal from './Proposal';\n\n\nfunction UniswapApp() {\n  const allProposalsQuery = gql`\n    query getAllProposals {\n      proposals(first: 20) {\n        id\n        status\n        endBlock\n        description\n      }\n    }`;\n\n  function Proposals() {\n    const { loading, error, data } = useQuery(allProposalsQuery);\n    if (loading) return <p>Loading...</p>;\n    if (error) {\n      console.log(error);\n      return <p>Error :(</p>;\n    }\n    \n    return <ul> {\n      data.proposals.map(\n        function(element, index){ \n          return <li key={element.id}> <Link to={'/uniswap/'+element.id} target=\"_blank\"> {element.id}, {element.status}, {element.endBlock}, {element.description.substring(1,20)}... </Link> </li>; \n        })} \n      </ul>\n      \n    \n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>  \n        <Route exact path=\"/\">\n          <div>\n            <h2>Uniswap Governance Proposals</h2>\n            <Proposals />\n          </div>\n        </Route>\n          <Route path=\"/uniswap/:id\" component={Proposal} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default UniswapApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\nimport './index.css';\nimport AaveApp from './component/aave/App';\nimport CompoundApp from './component/compound/App';\nimport UniswapApp from './component/uniswap/App';\n\n\nconst aaveClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/aave/governance-v2',\n  cache: new InMemoryCache()\n});\n\nconst compoundClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/protofire/compound-governance',\n  cache: new InMemoryCache()\n});\n\nconst uniswapClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/messari/uniswap-governance',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={aaveClient}>\n    <AaveApp />\n  </ApolloProvider>,\n  document.getElementById('AaveList')\n);\n\nReactDOM.render(\n  <ApolloProvider client={compoundClient}>\n    <CompoundApp />\n  </ApolloProvider>,\n  document.getElementById('CompoundList')\n);\n\nReactDOM.render(\n  <ApolloProvider client={uniswapClient}>\n    <UniswapApp />\n  </ApolloProvider>,\n  document.getElementById('UniswapList')\n);"],"sourceRoot":""}